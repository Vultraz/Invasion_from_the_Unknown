#textdomain wesnoth-Invasion_from_the_Unknown

#define __SHAXTHAL_SURFACE_VARIATION
    variation=surface
#enddef

#define HIVE_SPAWN_SPAWN_INTERNAL TYPE SIDE X Y FACING GUARD_RADIUS
    {LOG_IFTU "hive spawn: ({X}, {Y}) type={TYPE} facing={FACING} ai_vars.guard_radius={GUARD_RADIUS}"}
    [unit]
        id=hivespawn_{X}_{Y}
        type={TYPE}
        side={SIDE}
        formula="{INCLUDE_LOCAL /ai/formula/darkhive-drone.ai}"
        [ai_vars]
            guard_radius={GUARD_RADIUS}
            guard_loc="loc({X},{Y})"
        [/ai_vars]
        x={X}
        y={Y}
        facing={FACING}
        random_traits=yes
    [/unit]
#enddef

#define HIVE_SPAWN_ONCE_POINT _TYPES _SIDE _X _Y
    [event]
        name=prestart
        {LOG_IFTU "setting up one-time spawn point at ({_X},{_Y})..."}

        {VARIABLE_RANDOM hivespawn_type ({_TYPES})}
        {VARIABLE_RANDOM hivespawn_facing "{DIRECTION_ALL}"}
        {VARIABLE_RANDOM hivespawn_guard_radius {DARKHIVE_DRONE_AI_RANDOM_RADIUS} }

        [if]
            {VARIABLE_BOOLEAN_EQUALS __uu_shaxthal_in_surface no}
            [then]
                {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {_SIDE} {_X} {_Y} $hivespawn_facing $hivespawn_guard_radius}
            [/then]
            [else]
                {LOG_IFTU "applying surface variation..."}
                {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {_SIDE} {_X} {_Y} $hivespawn_facing $hivespawn_guard_radius}
                [+unit]
                    {__SHAXTHAL_SURFACE_VARIATION}
                [/unit]
            [/else]
        [/if]
        {CLEAR_VARIABLE hivespawn_type}
        {CLEAR_VARIABLE hivespawn_facing}
        {CLEAR_VARIABLE hivespawn_guard_radius}
    [/event]
#enddef

#define HIVE_SPAWN___EVT_DIE TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    [event]
        name=die
        first_time_only=no
        [filter]
            id=hivespawn_{X}_{Y}
        [/filter]
        {VARIABLE temp_macrotext ({RESPAWN})}
        # Use a random probability mechanism based in multiple RNG results to decrease or increase
        # the chance of not respawning units, according to difficulty setting
        {VARIABLE_RANDOM temp_chance_of_not_respawning1 {DIFF (32..50)   (0..100)   (0..500)} }
        {VARIABLE_RANDOM temp_chance_of_not_respawning2 {DIFF (128..152) (100..200) (0..500)} }
        {VARIABLE_MODULO temp_chance_of_not_respawning2 {DIFF 7 13 53} }
        [if]
            {VARIABLE_BOOLEAN_EQUALS temp_macrotext yes}
            [and]
                {VARIABLE_NUM_GREATER_THAN global_respawning_flag 0}
            [/and]
            [and]
                {VARIABLE_NUM_NOT_EQUALS temp_chance_of_not_respawning1 48}
            [/and]
            [and]
                {VARIABLE_NUM_NOT_EQUALS temp_chance_of_not_respawning2 0}
            [/and]
            [then]
                {VARIABLE time_to_respawn_{X}_{Y} (-{RESPAWN_TIMEOUT})}
                {LOG_IFTU "respawn point ({X}, {Y}) reactivating in $time_to_respawn_{X}_{Y}| turns"}
                [event]
                    name=new turn
                    first_time_only=no
                    {VARIABLE_INC time_to_respawn_{X}_{Y}}
                    [if]
                        {VARIABLE_NUM_EQUALS time_to_respawn_{X}_{Y} 0}
                        [then]
                            {VARIABLE_RANDOM hivespawn_type ({TYPES})}
                            {VARIABLE_RANDOM hivespawn_facing "sw,se"}
                            {VARIABLE_RANDOM hivespawn_guard_radius {DARKHIVE_DRONE_AI_RANDOM_RADIUS} }
                            [if]
                                {VARIABLE_BOOLEAN_EQUALS __uu_shaxthal_in_surface no}
                                [then]
                                    {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {SIDE} {X} {Y} $hivespawn_facing $hivespawn_guard_radius}
                                [/then]
                                [else]
                                    {LOG_IFTU "applying surface variation..."}
                                    {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {SIDE} {X} {Y} $hivespawn_facing $hivespawn_guard_radius}
                                    [+unit]
                                        {__SHAXTHAL_SURFACE_VARIATION}
                                    [/unit]
                                [/else]
                            [/if]
                            {CLEAR_VARIABLE hivespawn_type}
                            {CLEAR_VARIABLE hivespawn_facing}
                            {CLEAR_VARIABLE hivespawn_guard_radius}
                        [/then]
                    [/if]
                [/event]
            [/then]
            [else]
                {LOG_IFTU "respawn point ({X}, {Y}) automatically disabled"}
            [/else]
        [/if]
        {CLEAR_VARIABLE temp_macrotext}
        {CLEAR_VARIABLE temp_chance_of_not_respawning1}
        {CLEAR_VARIABLE temp_chance_of_not_respawning2}
    [/event]
#enddef

#define HIVE_SPAWN___EVT_ENDLEVEL _X _Y
    [event]
        name=victory
        {LOG_IFTU "GC: respawn point ({_X}, {_Y})"}
        {CLEAR_VARIABLE time_to_respawn_{_X}_{_Y} }
        {CLEAR_VARIABLE global_respawning_flag}
    [/event]
#enddef

# Variant of {HIVE_SPAWN_POINT} that should be called from inside an event; useful for
# creating spawn points only when required
#define PUT_HIVE_SPAWN_POINT TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    {LOG_IFTU "setting up respawn point at ({X},{Y})..."}

    {VARIABLE global_respawning_flag 1}
    {VARIABLE_RANDOM hivespawn_type ({TYPES})}
    {VARIABLE_RANDOM hivespawn_facing "sw,se"}
    {VARIABLE_RANDOM hivespawn_guard_radius {DARKHIVE_DRONE_AI_RANDOM_RADIUS} }
    [if]
        {VARIABLE_BOOLEAN_EQUALS __uu_shaxthal_in_surface no}
        [then]
            {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {SIDE} {X} {Y} $hivespawn_facing $hivespawn_guard_radius}
        [/then]
        [else]
            {LOG_IFTU "applying surface variation..."}
            {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {SIDE} {X} {Y} $hivespawn_facing $hivespawn_guard_radius}
            [+unit]
                {__SHAXTHAL_SURFACE_VARIATION}
            [/unit]
        [/else]
    [/if]
    {CLEAR_VARIABLE hivespawn_type}
    {CLEAR_VARIABLE hivespawn_facing}
    {CLEAR_VARIABLE hivespawn_guard_radius}
    {HIVE_SPAWN___EVT_DIE {TYPES} {SIDE} {X} {Y} {RESPAWN} {RESPAWN_TIMEOUT} }
    {HIVE_SPAWN___EVT_ENDLEVEL {X} {Y} }
#enddef

#define HIVE_SPAWN_POINT TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    [event]
        name=prestart
        {VARIABLE global_respawning_flag 1}
        {LOG_IFTU "setting up initial respawn point at ({X},{Y})..."}
        {VARIABLE_RANDOM hivespawn_type ({TYPES})}
        {VARIABLE_RANDOM hivespawn_facing "sw,se"}
        {VARIABLE_RANDOM hivespawn_guard_radius {DARKHIVE_DRONE_AI_RANDOM_RADIUS} }
        [if]
            {VARIABLE_BOOLEAN_EQUALS __uu_shaxthal_in_surface no}
            [then]
                {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {SIDE} {X} {Y} $hivespawn_facing $hivespawn_guard_radius}
            [/then]
            [else]
                {LOG_IFTU "applying surface variation..."}
                {HIVE_SPAWN_SPAWN_INTERNAL $hivespawn_type {SIDE} {X} {Y} $hivespawn_facing $hivespawn_guard_radius}
                [+unit]
                    {__SHAXTHAL_SURFACE_VARIATION}
                [/unit]
            [/else]
        [/if]
        {CLEAR_VARIABLE hivespawn_type}
        {CLEAR_VARIABLE hivespawn_facing}
        {CLEAR_VARIABLE hivespawn_guard_radius}
    [/event]
    {HIVE_SPAWN___EVT_DIE {TYPES} {SIDE} {X} {Y} {RESPAWN} {RESPAWN_TIMEOUT} }
    {HIVE_SPAWN___EVT_ENDLEVEL {X} {Y} }
#enddef
