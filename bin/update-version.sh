#! /bin/bash
#    Bump version to parameter 1 on tagfiles, _server.pbl and _main.cfg
#
#    Copyright (C) 2008 by Ignacio Riquelme M. <shadowm2006@gmail.com>
#    Not part of the Battle for Wesnoth Project, but part of an add-on
#    Project, "Invasion from the Unknown"
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 2
#    or at your option any later version.
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY.
#
#   See the COPYING file for more details.
#
# NOTE! this script assumes the UMC I made uses new-style manifest filenames! (i.e. /_main.cfg instead
# of /../UMC_Name_Goes_Here.cfg)

# Test mandatory parameters; exit if no success
if [ -z "${1}" ] || [ -z "${2}" ] || [ -z "${3}" ]; then
	cat <<- EOD
		usage:
		   ${0} <major version> <minor version> <release number>
		For adding special version suffixes, please append them to release-number.
	EOD
	exit 2
fi

# Check whether we are running at the utilities directory or not
if [ "`basename ${PWD}`" = "bin" ]; then
	# We are, let's go one level up to optimize file paths
	cd ..
fi

. ./bin/setup_env.inc

CAMPAIGN_MANIFEST_WML="_main.cfg"
CAMPAIGN_EXPORT_MANIFEST_WML="_server.pbl"
CAMPAIGN_VERSION_TAG_FILE="$TAG_FILE_ON_UMC_DIR_PACKAGE_VERSION"

# We need to get the current version from tagfile
# If it doesn't exist we are toast

if ! [ -f ./${TAG_PREFIX_ON_UMC_DIR}/${CAMPAIGN_VERSION_TAG_FILE} ]; then
	echo -ne "Error: could not detect current campaign version; please create tag file first on:\n<campaign inner root>/${TAG_PREFIX_ON_UMC_DIR}/${CAMPAIGN_VERSION_TAG_FILE}\n"
	exit 1
fi

if ! [ -f ./${CAMPAIGN_EXPORT_MANIFEST_WML} ]; then
	echo -ne "No former .pbl file detected; an upload passphrase will be generated on next run of campaign client interface.\n"
fi

if ! [ -f ./${CAMPAIGN_EXPORT_MANIFEST_WML}.in ]; then
	echo -ne "No .pbl.in file detected; aborting!\n"
	exit 1
fi

VERSION_PREVIOUS="$(cat ./${TAG_PREFIX_ON_UMC_DIR}/${CAMPAIGN_VERSION_TAG_FILE})"
# VERSION_NEW = <major>.<minor>.<release number>
VERSION_NEW="${1}.${2}.${3}"

echo -ne "Updating campaign version from \"${VERSION_PREVIOUS}\" to \"${VERSION_NEW}\"...\n> "

# Avoid risk of simultaneous disk I/O by invalidating opened file descriptors
rm -f ./${TAG_PREFIX_ON_UMC_DIR}/${CAMPAIGN_VERSION_TAG_FILE}
# Write new version string to tagfile
echo "${VERSION_NEW}" > ./${TAG_PREFIX_ON_UMC_DIR}/${CAMPAIGN_VERSION_TAG_FILE}
echo -n "tagfile "

# Save passphrase
CAMPAIGN_U_PASSPHRASE="$(grep passphrase ./${CAMPAIGN_EXPORT_MANIFEST_WML})"

# Remove old _server.pbl
rm -f ./${CAMPAIGN_EXPORT_MANIFEST_WML}
rm -f ./${CAMPAIGN_EXPORT_MANIFEST_WML}.out

# Write new _server.pbl using _server.pbl.in
. ./${CAMPAIGN_EXPORT_MANIFEST_WML}.in

echo -ne "${CAMPAIGN_U_PASSPHRASE}\n" >> ./${CAMPAIGN_EXPORT_MANIFEST_WML}.out
cat << EOD
# Automatically generated by $0

author=${__PBL_AUTHOR}
${CAMPAIGN_U_PASSPHRASE}
title=${__PBL_TITLE}
translate=${__PBL_AUTO_TRANSLATE}

icon=${__PBL_ICON}
description=${__PBL_DESCRIPTION}

EOD
>> ./${CAMPAIGN_EXPORT_MANIFEST_WML}.out

mv -f ./${CAMPAIGN_EXPORT_MANIFEST_WML}.out ./${CAMPAIGN_EXPORT_MANIFEST_WML}

# Update _main.cfg

# Get the campaign loader symbol without leading "CAMPAIGN_", stripping extra tab stops and spaces
CAMPAIGN_WPP_LOADER_SYMBOL_BASENAME=$(grep -m 1 define= ./_main.cfg | sed "s/\t*// ; s/ *// ; s/define=// ; s/CAMPAIGN_//" -)
CAMPAIGN_WPP_SYMBOL_VERSION_MAJOR="VERSION_${CAMPAIGN_WPP_LOADER_SYMBOL_BASENAME}_MAJOR"
CAMPAIGN_WPP_SYMBOL_VERSION_MINOR="VERSION_${CAMPAIGN_WPP_LOADER_SYMBOL_BASENAME}_MINOR"
CAMPAIGN_WPP_SYMBOL_VERSION_RELNUM="VERSION_${CAMPAIGN_WPP_LOADER_SYMBOL_BASENAME}_REVISION"

