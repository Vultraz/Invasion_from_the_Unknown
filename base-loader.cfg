#textdomain wesnoth-Invasion_from_the_Unknown

# LD provides a simpler, shorter way of including WML files by using only
# relative paths (to the add-on's directory).
#define LD __PATH__
{~add-ons/Invasion_from_the_Unknown/{__PATH__}}#enddef

# DIFF includes WML conditionally depending on the selected difficulty. I
# prefer this to mainline's ON_DIFFICULTY macro, which has an exceedingly
# long name for such an ubiquitous purpose. There is no whitespace (e.g.
# tabs, newlines, blanks) around the inclusions in order to avoid issues
# when the substitution is performed in middle of a string literal.
#ifdef EASY
#define DIFF _ON_EASY _ON_NORMAL _ON_HARD
{_ON_EASY}#enddef
#endif
#ifdef NORMAL
#define DIFF _ON_EASY _ON_NORMAL _ON_HARD
{_ON_NORMAL}#enddef
#endif
#ifdef HARD
#define DIFF _ON_EASY _ON_NORMAL _ON_HARD
{_ON_HARD}#enddef
#endif

# NOTE: do not change the order in which these files are preprocessing unless
# you are very sure of what you are doing.

[lua]
    code = <<
        PROJECT_Y_RECONSTRUCTION_VERSION = '>>+"{LD dist/VERSION}"+<<'

        -- Global helper function table.
        helper = wesnoth.require "lua/helper.lua"

        -- Load local code files.
        for i, file in ipairs {
            'hex.lua',
            'common.lua',
            'optimizations.lua',
            'npc.lua',
            'overrides.lua',
            'theme.lua',
            'wlp.lua',

            'gui/bug.lua',
            'gui/character_descriptions_prompt.lua',
            'gui/intermission_prompt.lua',
            'gui/transient_message.lua',

            'Invasion_from_the_Unknown.lua',
        }
        do
            wesnoth.dofile('~add-ons/Invasion_from_the_Unknown/lua/' .. file)
        end
    >>
[/lua]

{LD /base-debug.cfg}

{LD /mainline-strings.cfg}
{LD /base-utils.cfg}
{LD /base-variables.cfg}
{LD /base-math.cfg}
{LD /base-rc.cfg}
{LD /macros}

[+units]
    {LD /units}
[/units]

{LD /terrain-graphics}
{LD /terrain.cfg}
{LD /terrain-virtual.cfg}

{LD /ai}

{LD /themes}

#define MAP __FILE__
    map_data="{LD /maps/{__FILE__}}"
#enddef

#define MASK __FILE__
    mask="{LD /masks/{__FILE__}}"
#enddef

#define SHROUD_DATA __FILE__
    shroud_data="{LD /masks/{__FILE__}}"
#enddef

{LD /scenarios}

# EOF

# kate: indent-mode normal; encoding utf-8; space-indent on;
